class Solution {
    public boolean canJump(int[] nums) {
        boolean[] dp = new boolean[nums.length + 1];

         int canReach = 0;
        for (int i=0; i <= canReach; i++){
            if (i == nums.length-1)
                return true;
            canReach = Math.max(canReach, i+nums[i]);
        }
        return false;
    }
}

===================================================================

class Solution {
    public boolean canJump(int[] nums) {
    
      if(nums.length == 1) return true;

        int minStep = 1; 

        for(int i=nums.length-2; i>0; i--) {
            if(nums[i] == 0) {
                minStep++;
            }
            else {
                if(nums[i] >= minStep) {
                    minStep = 1;
                }
                else minStep++;
            }
        }
        if(nums[0] >= minStep) return true;
        else return false;
       }
     }
