==========================================================RECURSIVE=============================================================================================================

 List<Integer> ans = new ArrayList<>();
    public List<Integer> preorder(Node root) {
       traverse(root);
        return ans;
    }
    public void traverse(Node node){
         if(node == null){
            return;
        }
        ans.add(node.val);
        for(Node child: node.children){
            traverse(child);
        }
        
==========================================================ITERATIVE==============================================================================================================
 public List<Integer> preorder(Node root) {
        Stack<Node> st = new Stack<Node>();
        List<Integer> ans = new LinkedList<>();
        st.push(root);
        
        if(root == null) {
            return ans;
        }
        
        while(!st.isEmpty()) {
            Node node = st.pop();
            ans.add(node.val);
            for(int i = node.children.size() - 1; i >= 0; i--) {
                st.push(node.children.get(i));
            }
        }
        return ans;
	}
